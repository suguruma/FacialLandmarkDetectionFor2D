[IO]
image_width=360
image_height=400
input_width=90
input_height=100
output_size=28

[Dataset]
image_path=data//img3dTo2d
label_path=data//txt3dTo2d
base=before_set1
base_plus=
base_validation=before_test1
base_validation_plus=
comment=
target_path=lenet_test

[Dictionary]
NetworkList=[multi, net7, lenet, vgg16, res19, res18, res34, res50, res101, res152, res18mtl, res34mtl]
OptimizerList=[SGD, Adadelta, Adagrad, Adam, Adamax, RMSprop, Nadam]

[Parameter]
network=lenet
epoch=30
batch_size=64
learning_rates_start=0.03
learning_rates_stop=0.001
optimizer=Adagrad

[Callback]
earlystopping=100

[MaltiTask]
multi_task_on=False

[Save]
model_figure=figure_model.png
architecture=architecture.json
weights=weights.h5
weights_checkpoint=weights_checkpoint.h5
train_log=train_log.csv
labelset=label.csv
labelset_val=label_val.csv
network_py=network.py
score=score.csv